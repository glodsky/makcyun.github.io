<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[4块钱,用Github+Hexo搭建你的个人博客：美化篇]]></title>
    <url>%2Fhexo02.html</url>
    <content type="text"><![CDATA[上一篇文章，介绍了如何搭建个人博客。这一篇文章则以我的博客为例详细介绍博客的美化步骤。 摘要：搭建博客相对简单，而美化博客则要复杂一些，因为涉及到修改和增删源代码，对于没有前端基础的人来说，会比较费时间精力。为了尽可能在最短的时间里，打造一个总体看得过去的博客，本文以我的博客为例，介绍一些比较实用的博客美化操作和技巧。 1. 选择新的模板首先，是要更换非常难看的初始的博客界面。重新挑选一个好看的主题模板，然后在此基础上进行美化。 主题寻找：https://github.com/search?o=desc&amp;q=topic%3Ahexo-theme&amp;s=stars&amp;type=Repositories 该网站按照模板的受欢迎程度进行排名，可以看到遥遥领先的第一名是一款叫作：next的主题，选用这款即可。进入到这个主题，可以阅读README.md模板使用说明，还可以查看模板示例网站。 模板使用：打开博客根目录下的themes文件夹(注：后文所说的根目录指：D:\blog)，右键Git Bash运行下述命令：git clone https://github.com/iissnan/hexo-theme-next themes/next就可以把这款主题的安装文件下载到电脑中。接着，打开D:\blog_config.yml文件，找到 theme字段，修改参数为：theme: hexo-theme-next，然后根目录运行下述命令：12hexo cleanhexo s -g 这样，便成功应用新的next主题，浏览器访问 :http://localhost:4000，查看一下新的博客页面。可以看到，博客变得非常清爽了，（可能和你实际看到的，略有不同，没有关系）。这款主题包含4种风格，默认的是Muse，也可以尝试其他风格。具体操作：打开D:\blog\_config.yml，定位到Schemes，想要哪款主题就取消前面的#，我的博客使用的是Pisces风格。12345# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini 2. 模板美化接下来进行模板的美化。根据网页的结构布局，将从以下几个部分进行针对性地美化： 总体 侧边栏 页脚 文章 重要的文件美化需要主要是对几个模板文件进行修改和增删。为了便于后续进行操作，先列出文件名和所在的位置： 站点文件。位于站点文件夹根目录内：D:/blog/_config.yml 主题文件。位于主题文件夹根目录内：D:/blog/themes/next/_config.yml 自定义样式文件。位于主题文件夹内：D:\blog\themes\hexo-theme-next\source\css_custom\custom.styl 2.1. 总体布置 2.1.1. 设置中文界面站点文件: language: zh-Hans如果中文乱码，记事本另存为utf-8，最好不要用记事本编辑，用notepad。 2.1.2. 动态背景主题文件： canvas_nest: true背景的几何线条是采用的nest效果，一个基于html5 canvas绘制的网页背景效果，非常赞！来自github的开源项目canvas-nest：https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md 如果感觉默认的线条太多的话，可以这么设置：打开 next/layout/_layout.swig，在 &lt; /body&gt;之前添加代码(注意不要放在&lt; /head&gt;的后面)： 1234&#123;% if theme.canvas_nest %&#125;&lt;script type=&quot;text/javascript&quot;color=&quot;233,233,233&quot; opacity=&apos;0.9&apos; zIndex=&quot;-2&quot; count=&quot;50&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125; 说明：color ：线条颜色, 默认: ‘0,0,0’；三个数字分别为(R,G,B)opacity: 线条透明度（0~1）, 默认: 0.5count: 线条的总数量, 默认: 150zIndex: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1 2.2. 侧边栏美化 2.2.1. 添加博客名字和slogan修改站点文件如下：123456789101112# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: 高级农民工 # 更改为你自己的subtitle: Beginner's Mind description:keywords: python,hexo,神器,软件author: 高级农民工language: zh-Hanstimezone: 2.2.2. 菜单设置文件路径：D:\blog\themes\hexo-theme-next\languages\zh-Hans.yml修改如下：1234567891011menu: home: 首&amp;emsp;&amp;emsp;页 archives: 归&amp;emsp;&amp;emsp;档 categories: 分&amp;emsp;&amp;emsp;类 tags: 标&amp;emsp;&amp;emsp;签 about: 关于博主 search: 站内搜索 top: 最受欢迎 schedule: 日程表 sitemap: 站点地图 # commonweal: 公益404 注意：两字的中间添加&amp;emsp;&amp;emsp;可实现列对齐。 2.2.3. 新建标签、分类、关于页面分别运行命令：123hexo new page &quot;tags&quot; hexo new page &quot;categories&quot; hexo new page &quot;about&quot; 然后，打开D:\blog\source就可以看到上述三个文件夹。要添加关于博主的介绍，只需要在/about/index.md文件中，用markdown书写内容即可，写完后运行：hexo d -g，便可看到效果。 2.2.4. 侧栏社交链接图标设置可以添加你的github、Email、知乎、简书等社交网站账号。主题文件：12345678910111213141516171819202122232425# ---------------------------------------------------------------# Sidebar Settings 侧栏社交链接图标设置# ---------------------------------------------------------------# Social Links.# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: GitHub: https://github.com/makcyun || github E-Mail: mailto:johnny824lee@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false 2.2.5. 添加头像并美化博客添加头像有两种方法：第一种是放在本地文件夹中：D:\blog\public\uploads，并且命名为avatar.jpg。第二种是将图片放在七牛云中，然后传入链接。推荐这种方式，可以加快网页打开速度。站点文件任意行添加下面代码：123456# 添加头像# avatar: /uploads/avatar.jpg #方法1本地图片avatar: http://pbscl931v.bkt.clouddn.com/18-8-3/40685653.jpg # 方法2网络图片注意：uppoads文件夹是在主题里的文件夹，没有则新建D:\blog\themes\hexo-theme-next\source\uploads\avatar.jpg 头像变圆形可参考：http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.htmlD:\blog\themes\next\source\css\_common\components\sidebar\sidebar-author.styl，在里面添加如下代码：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;/*再进一步想点击产生旋转效果，就继续在该文件下方添加代码：*/img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 2.3. 页脚美化建站时间设置12345678910# Set rss to false to disable feed link.# Leave rss as empty to use site's feed link.# Set rss to specific value if you have burned your feed already.rss:footer: # Specify the date when the site was setup. # If not defined, current year will be used. # 建站年份 since: 2018 #根据实际情况修改 2.3.1. 隐藏powered By Hexo/主题文件路径： D:\blog\themes\hexo-theme-next\layout_partials\ footer.swig更改该文件下面的代码：123456&lt;div class="theme-info"&gt;&#123;# #&#125;&#123;&#123; __('footer.theme') &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next"&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt; 用注释两行如下语句，也可以直接删除掉这段代码：123456&lt;!--&lt;div class="theme-info"&gt;&#123;# #&#125;&#123;&#123; __('footer.theme') &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next"&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;--&gt; 2.3.2. next版本隐藏继续在上面文件中修改代码如下：123456789# 用&lt;!--注释语句--&gt;&#123;% if theme.footer.theme.enable %&#125; &lt;!--&lt;div class="theme-info"&gt;&#123;# #&#125;&#123;&#123; __('footer.theme') &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next"&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;--&gt;&#123;% endif %&#125; 2.3.3. 时间和用户名之间添加心形主题文件：建站时间下面修改icon: heart12345678910111213footer: # Specify the date when the site was setup. # If not defined, current year will be used. # 建站年份 since: 2018 # Icon between year and copyright info. # 年份后面的图标，为 Font Awesome 图标 # 自己去纠结 http://fontawesome.io/icons/ # 然后更改名字就行，下面的有关图标的设置都一样 # Icon between year and copyright info. #icon: user icon: heart 如果还想让心变成跳动的红心，则继续在:上面的footer.swig文件中修改：&lt;span class=&quot;with-love&quot;&gt;为 &lt;span class=&quot;with-love&quot; id=&quot;heart&quot;&gt; #一定要加id=”heart”12345678&lt;div class="copyright"&gt;&#123;##&#125;&#123;% set current = date(Date.now(), "YYYY") %&#125;&#123;##&#125;&amp;copy; &#123;% if theme.footer.since and theme.footer.since != current %&#125;&#123;&#123; theme.footer.since &#125;&#125; &amp;mdash; &#123;% endif %&#125;&#123;##&#125;&lt;span itemprop="copyrightYear"&gt;&#123;&#123; current &#125;&#125;&lt;/span&gt; &lt;span class="with-love"&gt; &lt;i class="fa fa-&#123;&#123; theme.footer.icon &#125;&#125;"&gt;&lt;/i&gt; &lt;/span&gt; &lt;span class="author" itemprop="copyrightHolder"&gt;&#123;&#123; theme.footer.copyright || config.author &#125;&#125;&lt;/span&gt; 在自定义文件中添加如下代码：1234567891011121314// 1 页脚加闪烁红心// 自定义页脚跳动的心样式@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(192, 0, 39);&#125; 接着在自定义custom.styl文件中，添加以下代码：1234567891011121314// 1 页脚加闪烁红心// 自定义页脚跳动的心样式@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(192, 0, 39); # rgb可随意修改&#125; 2.3.4. 页脚显示总访客数和总浏览量首先，在上述footer.swig文件首行添加如下代码：1234567891011121314151617181920212223242526272829303132333435363738394041&lt;script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;#接着修改相应代码：# 添加总访客量&lt;span id="busuanzi_container_site_uv"&gt; 访客数:&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;人次&lt;/span&gt;&#123;% if theme.footer.powered %&#125; &lt;!--&lt;div class="powered-by"&gt;&#123;# #&#125;&#123;&#123; __('footer.powered', '&lt;a class="theme-link" target="_blank" href="https://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125;&#123;##&#125;&lt;/div&gt;--&gt;&#123;% endif %&#125;# 添加'|'符号&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;&#123;% if theme.footer.custom_text %&#125; &lt;div class="footer-custom"&gt;&#123;# #&#125;&#123;&#123; theme.footer.custom_text &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;# 添加总访问量&lt;span id="busuanzi_container_site_pv"&gt; 总访问量:&lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt;次&lt;/span&gt;# 添加'|'符号&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;# 添加博客全站共：&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 2.4. 文章美化 2.4.1. 显示统计字数和估计阅读时长修改主题文件：1234567891011# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcount# 显示统计字数和估计阅读时长# 注意：这个要安装插件，先进入站点文件夹根目录# 然后：npm install hexo-wordcount --savepost_wordcount: item_text: true wordcount: true min2read: true totalcount: false separated_meta: false 注意，做了以上修改后，发现字数只显示了数字并没有带相应的单位:字和分钟。因此，还需做如下修改：打开D:\blog\themes\hexo-theme-next\layout\_macro\ **post.swig**文件，添加单位：1234567891011121314151617181920212223242526272829303132333435363738394041424344&#123;% if theme.post_wordcount.wordcount or theme.post_wordcount.min2read %&#125; &lt;div class="post-wordcount"&gt; &#123;% if theme.post_wordcount.wordcount %&#125; &#123;% if not theme.post_wordcount.separated_meta %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt; &#123;% endif %&#125; &lt;span class="post-meta-item-icon"&gt; &lt;i class="fa fa-file-word-o"&gt;&lt;/i&gt; &lt;/span&gt; &#123;% if theme.post_wordcount.item_text %&#125; &lt;span class="post-meta-item-text"&gt;&#123;&#123; __('post.wordcount') &#125;&#125;&amp;#58;&lt;/span&gt; &#123;% endif %&#125; &lt;span title="&#123;&#123; __('post.wordcount') &#125;&#125;"&gt; &#123;&#123; wordcount(post.content) &#125;&#125; 字 &lt;/span&gt; &#123;% endif %&#125; &#123;% if theme.post_wordcount.wordcount and theme.post_wordcount.min2read %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt; &#123;% endif %&#125; &#123;% if theme.post_wordcount.min2read %&#125; &lt;span class="post-meta-item-icon"&gt; &lt;i class="fa fa-clock-o"&gt;&lt;/i&gt; &lt;/span&gt; &#123;% if theme.post_wordcount.item_text %&#125; &lt;span class="post-meta-item-text"&gt;&#123;&#123; __('post.min2read') &#125;&#125; &amp;asymp;&lt;/span&gt; &#123;% endif %&#125; &lt;span title="&#123;&#123; __('post.min2read') &#125;&#125;"&gt; &#123;&#123; min2read(post.content) &#125;&#125; 分钟 &lt;/span&gt; &#123;% endif %&#125; &lt;/div&gt; &#123;% endif %&#125; &#123;% if post.description and (not theme.excerpt_description or not is_index) %&#125; &lt;div class="post-description"&gt; &#123;&#123; post.description &#125;&#125; &lt;/div&gt; &#123;% endif %&#125; &lt;/div&gt; &lt;/header&gt; &#123;% endif %&#125; 2.4.2. 添加阅读全文实现在主页只展示部分文字，其他文字隐藏起来，通过点击’阅读更多’来阅读全文。方法就是写每一篇文章的时候，在必要的地方添加&lt;!-- more --&gt;即可。例如：1234567891011121314---title: 4块钱,用Github+Hexo搭建你的个人博客：搭建篇id: hexo01images: http://pbscl931v.bkt.clouddn.com/18-8-3/89578286.jpgcategories: hexo博客tags: [hexo,个人博客,github]keywords: hexo,搭建博客,github pages,next---4块钱,你就能够在茫茫互联网中拥有一处专属于你的小天地，丈量你走过的每一个脚印。 &lt;!-- more --&gt;摘要： 对于一个不懂任何前端的纯小白来说，搭建博客是件很有挑战的事。 2.4.3. 显示每篇文章的阅读量参考这个教程即可：http://www.jeyzhang.com/hexo-next-add-post-views.html 在这个过程中发现了一个问题：pc端正常显示阅读量，但是移动端没有显示具体的阅读量。解决办法：在leancloud网站上，进入安全中心，检查web安全域名列表中是否添加了http：开头的域名，如果没有，则添加上应该就能解决，例如，我的：1http://makcyun.top/ 2.4.4. 文章摘要配图参考这个教程即可：http://wellliu.com/2016/12/30/%E3%80%90%E8%BD%AC%E3%80%91Blog%E6%91%98%E8%A6%81%E9%85%8D%E5%9B%BE/ 附上我的设置：在自定义文件中添加如下代码：1234567891011121314151617181920212223242526// img.img-topic &#123;// width: 100%;//&#125;//图片外部的容器方框.out-img-topic &#123; display: block; max-height:350px; //图片显示高度，如果不设置则每篇文章的图片高度会不一样，看起来不协调 margin-bottom: 24px; overflow: hidden;&#125;//图片img.img-topic &#123; display: block ; margin-left: .7em; margin-right: .7em; padding: 0; float: right; clear: right;&#125;// 去掉图片边框.posts-expand .post-body img &#123; border: none; padding: 0px;&#125; 2.4.5. 添加打赏功能参考下面的教程：https://www.cnblogs.com/mrwuzs/p/7943337.htmlhttps://blog.csdn.net/lcyaiym/article/details/76796545 以上，包括了博客美化的大部分操作。如果，你觉得还不够，想做得更精致一些，那么推荐一个非常详细的美化教程：https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html#附上我的-custom-styl 本文完。]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4块钱,用Github+Hexo搭建你的个人博客：搭建篇]]></title>
    <url>%2Fhexo01.html</url>
    <content type="text"><![CDATA[4块钱,你就能够在茫茫互联网中拥有一处专属于你的小天地，丈量你走过的每一个脚印。之前，在网上看到过很多人拥有很酷的个人博客，很是羡慕，但感觉很难所以一直没敢去尝试。最近捣鼓了几天，发现搭建博客其实没有想象中的难。 【更新于2018/7/14】 摘要： 对于一个不懂任何前端的纯小白来说，搭建博客是件很有挑战的事。好在参考了很多大佬的教程后顺利搭建完成，但过程中还是踩了一些坑。这里及时进行总结，作为博客的第一篇文章。 一、前言1 网上有很多现成的博客不用，为什么要自己搭建?可能有人会说：很多网站都能写博客，而且博客现在其实都有点过时了，为什么还要自己去搞？ 这里我说一下我想自己搭建的两点原因：一、网上的多数博客大家都共用一套相同的模板界面，没有特点、界面也杂乱充斥着很多不相关的东西，不论是自己写还是给人看，体验都不好。二、拥有一个你自己可以起名字的博客网站，里面的任何内容完全由你自己决定，这感觉是件很酷的事。 这些普通的网站博客和一些个人博客，哪个好看，高下立判吧。 vs &nbsp; vs 更多个人博客：litten &nbsp; http://litten.me/Ryan &nbsp; http://ryane.top/liyin &nbsp; https://liyin.date/reuixiy &nbsp; https://reuixiy.github.io/Tranquilpeak &nbsp; https://louisbarranqueiro.github.io/hexo-theme-tranquilpeak/ 2 搭建博客难不难？我之前认为搭建博客是一件只有能程序猿才能做出来的高大上的活。其实，只要跟着网上的教程一步步做下去，一个小时不到就可以搭建好你自己的个人博客。所以，搭建博客其实很简单。只不过，如果你想把博客做得好看一些的话，才会花费一些精力。 二、开始搭建博客如果看到上面那些精美的博客，你已经心动了，那就开始动手吧。下面正式开始博客搭建步骤。 搭建教程参考搭建博客的教程网上一搜一大堆，为了节省你的搜索时间，这里我筛选出了下面几篇很棒的教程，我基本都是跟着一步步做下来的。 小白独立搭建博客 2018，你该搭建自己的博客了！ 手把手教你用Hexo+Github 搭建属于自己的博客 操作平台:Win7 64位。 相关名词解释：Hexo：一种常用的博客框架，有了它建立博客非常简单。你可以认为它是一种博客模板，只不过它比普通网站的那种博客模板要好看地多，并且有很高度的自定义性，只要你愿意，你可以建立一个独一无二的博客来。若想详细了解Hexo的使用，移步 Hexo官方网站 https://hexo.io/zh-cn/docs/。 Github：一个全世界程序猿聚集的知名网站。免费的远程仓库和开源协作社区。我们需要利用网站里的Github Pages功能来托管需发布到网上的博客的相关文件和代码。 Git： 一种版本控制系统。我们在自己的本地电脑写博客，如何把博客同步到Github，然后发布到网上去？就需要用这个软件去写几行代码然后就能搞定，后期用的最多的就是它。 Node.js： 提供JavaScript的开发环境，安装好以后就不用跟它再打交道，所以不用太关注它。 1 软件安装配置搭建博客需要先下载2个软件：Git和Nodejs。软件安装过程很简单，一直点击Next默认直到安装完成就行了。 Git官网：https://git-scm.com/download/win安装完，打开cmd窗口运行下面命令，如果有返回版本信息说明安装成功。 git –version Nodejs官网：https://nodejs.org/en/download/同样，安装完有返回版本信息说明安装成功，见下图。 node -v npm -v 至此，软件安装步骤完成。 2 安装Hexo博客框架 安装hexo 这里开始就要用到使用频率最高的Git软件了。 桌面右键点击git bash here选项，会打开Git软件界面，输入下面每行命令并回车： 12npm install hexo-cli -gnpm install hexo-deployer-git --save 第一句是安装hexo，第二句是安装hexo部署到git page的deployer。代码命令看不懂没关系，一是这些命令之后几乎不再用到，二是用多了你会慢慢记住。 设置博客存放文件夹 你需要预想一下你要把博客文件新建在哪个盘下的文件夹里，除了c盘都可以，例如d盘根目录下的blog文件夹，紧接着在桌面输入下面命令并回车： hexo init /d/blog cd /d/blog npm install *注：/d/bog可以更改为你自己的文件夹* 有的教程是先新建博客文件夹，在该文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，再执行以下操作。但是我操作过程中出现过这样的失败提示：hexo:conmand not found，但我执行上面的命令时就没有出现该问题。 hexo init npm install 查看博客效果 至此，博客初步搭建好，输入下面一行本地部署生成的命令： hexo s -g 然后打开浏览器在网址栏输入：localhost:4000就可以看到博客的样子，如果无法打开，则继续输入下面命令： npm install hexo-deployer-git --save hexo clean hexo s -g 打开该网址，你可以看到第一篇默认的博客：Hello World。但看起来很难看，后续会通过重新选择模板来对博客进行美化。 现在你就可以开始写博客了，但是博客只能在你自己的电脑上看到，别人无法在网上看到你的博客。接下来需要利用前面提到的的Github Pages功能进行设置，设置完成之后别人通过搜索就可以看到你的博客。 3 把你的博客部署到Github Pages上去这是搭建博客相对比较复杂也是容易出错的一部分。 1. Github账号注册及配置 如果你没有github帐号，就新建一个，然后去邮箱进行验证；如果你有帐号则直接登录。官网：https://github.com/ 配置步骤： 建立new repository 只填写username.github.io即可，然后点击create repositrory。注意：username.github.io 的username要和用户名保持一致，不然后面会失败。以我的为例： 开启gh-pages功能 点击github主页点击头像下面的profile,找到新建立的username.github.io文件打开，点击settings，往下拉动鼠标到GitHub Pages。如果你看到上方出现以下警告： GitHub Pages is currently disabled. You must first add content to your repository before you can publish a GitHub Pages site 不用管他，点击选择choose a theme，随便选择一个，（之后我们要更改这些丑陋的模板），然后select theme保存就行了。 接下来的几个步骤参考教程1即可。 主要步骤包括： git创建SSH密钥 在GitHub账户中添加你的公钥 测试成功并设置用户信息 将本地的Hexo文件更新到Github库中 hexo部署更新博客 经过以上几步的操作，顺利的话，你的博客可以发布到网上，其他人也可以通过你的网址username.github.io（我的是makcyun.github.io）访问到你的博客。 4 赶紧新建个博客试试接下来你可以自己新建一个文档来写下你的第一篇博客并在网页上测试。 同样在根目录D:\blog中运行下面命令： hexo new 第一篇博客 *注：第一篇博客名称可以随便修改* 然后打开D:\blog\source\_posts文件夹，就可以看到一个第一篇博客.md的文件。用支持markdown语法的软件打开该文件进行编辑即可。 编辑好以后，运行下述命令： hexo clean hexo d -g 然后，在网址中输入username.github.io即可看到你的博客上，出现第一篇博客这篇新的文章。 至此，你的个人博客初步搭建过程就完成了。 但是，现在还存在两个问题你可能想解决： markdown语法是什么，如何用软件编写博客？ 网址是username.github.io，感觉很奇怪，而我的博客网址怎么是www开头的？ 好，下面来讲解一下。 第一个问题 关于markdown语法介绍：markdown——入门指南 当你大致了解markdown语法后，如何用markdown写博客呢？不妨参考这两篇详细教程： Markdown語法說明HEXO下的Markdown语法(GFM)写博客 接下来你要一个可以写markdown语法的软件，这里推荐两款软件。 Windows下使用Markdown Pad2, Mac下使用Mou。 我用的是Markdown Pad2，这款软件是付费软件，但网上有很多破解版，我这里将软件上传到了百度网盘，如需请取。MarkdownPad2： https://pan.baidu.com/s/1NHA-E83pxKfm2he0WJxXPA 密码：y9zh 安装好后，就可以打开刚才的第一篇博客.md，开始尝试写你的第一篇博客了。 比如这是我用markdownpad写的博客原稿。 可以看到文档里面都是字符，没有图片这些。所以只需要用键盘专注于打字就行了，不需要像word那么复杂，还要用鼠标插入标题样式、图片这些操作。 第二个问题 我的网址不是默认的username.github.io，是因为我购买了一个域名，然后和username.github.io进行了关联，这样我的博客网址变成了我的域名。 在哪里购买域名呢？首推去 阿里云官网 购买。 你可以随意起你喜欢的名字，然后在该网站进行搜索，没有人占用的话你就可以购买该域名。不同的后缀价格不同。可以看到.com、 .net等会比较贵，最便宜的这两年新出的.top域名，只要4块钱一年，我购买的就是这种。 购买完域名以后，需要做以下几个步骤： 实名认证 修改DNS 域名解析 新建CNAME文件 1 实名认证在修改DNS之前，必须要阿里云官网实名认证成功，用淘宝账户登录然后填写相关信息即可。 2 修改DNS实名认证成功后，进入管理界面，依次点击： 修改DNS为：f1g1ns1.dnspod.netf1g1ns2.dnspod.net 3 域名解析DNS修改好以后，到DNSPOD这个网站去解析你的域名。 首先，微信登录并注册 https://www.dnspod.cn/，点击域名解析，添加上你的域名。 接着，添加以下两条记录即可。 注意：makcyun.github.io.需换成你自己的名称，另外最后有一个“.” 4 新建CNAME文件在博客根目录文件夹下,例如我的D:\blog\source，新建名为CNAME的记事本文件，去掉后缀。在里面输入你的域名，例如我的：www.makcyun.top即可，保存并关闭。 注意： 这里填不填写www前缀都是可以的，区别在于填写www，那么博客网址就会以www开头，例如：www.makcyun.top；如果不填写，博客网址是：makcyun.top，二者都可以，看你喜欢。 完成以上4步之后，根目录下再次运行： hexo d -g 这时，输入你在记事本里的域名网址，即可打开你的博客。至此，你的博客就换成了你想要的网址，别人也可以通过这个网址访问到你的博客。 到这里，博客的初步搭建就算完成了，顺利的话不到1小时就能完成，如果中间出现差错，保持耐心多试几次应该就没问题。 此时，还有一个比较重要的问题就是，你可能会觉得你的博客不够美观，不如我博客里前面提到的那几个博客，甚至也没有我的好看。 如果你还愿意折腾的话，下一篇文章，我会以我的博客为例，讲一讲如何进行博客的美化。]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
